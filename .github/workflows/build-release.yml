---
name: "tagged-release"

on: [push]

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"
    if: contains(github.event.head_commit.message, 'v')
    
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v3
      - name: "Setup Go"
        uses: actions/setup-go@v2
        with:
          go-version: "1.20.5"
      - name: "Build and release"
        run: |
          GOOS=darwin GOARCH=amd64 go build -o deploy-agent-darwin-amd64 agent/main.go
          GOOS=darwin GOARCH=arm64 go build -o deploy-agent-darwin-arm64 agent/main.go
          GOOS=linux GOARCH=amd64 go build -o deploy-agent-linux-amd64 agent/main.go
          GOOS=linux GOARCH=arm go build -o deploy-agent-linux-arm agent/main.go
          GOOS=linux GOARCH=arm64 go build -o deploy-agent-linux-arm64 agent/main.go
          GOOS=windows GOARCH=amd64 go build -o deploy-agent-windows-amd64.exe agent/main.go
          GOOS=windows GOARCH=arm go build -o deploy-agent-windows-arm.exe agent/main.go
          GOOS=windows GOARCH=arm64 go build -o deploy-agent-windows-arm64.exe agent/main.go
          GOOS=darwin GOARCH=amd64 go build -o deploy-cli-darwin-amd64 cli/main.go
          GOOS=darwin GOARCH=arm64 go build -o deploy-cli-darwin-arm64 cli/main.go
          GOOS=linux GOARCH=amd64 go build -o deploy-cli-linux-amd64 cli/main.go
          GOOS=linux GOARCH=arm go build -o deploy-cli-linux-arm cli/main.go
          GOOS=linux GOARCH=arm64 go build -o deploy-cli-linux-arm64 cli/main.go
          GOOS=windows GOARCH=amd64 go build -o deploy-cli-windows-amd64.exe cli/main.go
          GOOS=windows GOARCH=arm go build -o deploy-cli-windows-arm.exe cli/main.go
          GOOS=windows GOARCH=arm64 go build -o deploy-cli-windows-arm64.exe cli/main.go
          echo "done!"

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: latest
          prerelease: false
          files: |
            deploy*
